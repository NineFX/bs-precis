// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/lib/js/src/jest.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var PrecisProfiles$BsPrecis = require("../../src/PrecisProfiles.bs.js");

var codecTest = /* :: */[
  "juliet@example.com",
  /* :: */[
    "fussball",
    /* :: */[
      "fußball",
      /* :: */[
        "π",
        /* :: */[
          "σ",
          /* :: */[
            "ς",
            /* [] */0
          ]
        ]
      ]
    ]
  ]
];

var codecThrowTest = /* :: */[
  "foo bar",
  /* :: */[
    "",
    /* :: */[
      "henryⅣ",
      /* :: */[
        "∞",
        /* [] */0
      ]
    ]
  ]
];

function testSingleCaseMapped(input) {
  return Jest.Expect[/* toBe */2](input, Jest.Expect[/* expect */0](PrecisProfiles$BsPrecis.usernameCaseMapped(input)));
}

function testSingleCasePreserved(input) {
  return Jest.Expect[/* toBe */2](input, Jest.Expect[/* expect */0](PrecisProfiles$BsPrecis.usernameCasePreserved(input)));
}

function throwSingleCaseMapped(input) {
  return Jest.Expect[/* toThrow */18](Jest.Expect[/* expect */0]((function (param) {
                    return PrecisProfiles$BsPrecis.usernameCaseMapped(input);
                  })));
}

function throwSingleCasePreserved(input) {
  return Jest.Expect[/* toThrow */18](Jest.Expect[/* expect */0]((function (param) {
                    return PrecisProfiles$BsPrecis.usernameCasePreserved(input);
                  })));
}

function testBuilder(input) {
  Jest.test("UsernameCaseMapped: " + input, (function (param) {
          return testSingleCaseMapped(input);
        }));
  return Jest.test("UsernameCasePreserved: " + input, (function (param) {
                return testSingleCasePreserved(input);
              }));
}

function throwBuilder(input) {
  Jest.test("UsernameCaseMapped Throw: " + input, (function (param) {
          return throwSingleCaseMapped(input);
        }));
  return Jest.test("UsernaemCasePreserved Throw: " + input, (function (param) {
                return throwSingleCasePreserved(input);
              }));
}

Jest.describe("Identifiers Codec Tests", (function (param) {
        Belt_List.forEach(codecTest, testBuilder);
        return Belt_List.forEach(codecThrowTest, throwBuilder);
      }));

exports.codecTest = codecTest;
exports.codecThrowTest = codecThrowTest;
exports.testSingleCaseMapped = testSingleCaseMapped;
exports.testSingleCasePreserved = testSingleCasePreserved;
exports.throwSingleCaseMapped = throwSingleCaseMapped;
exports.throwSingleCasePreserved = throwSingleCasePreserved;
exports.testBuilder = testBuilder;
exports.throwBuilder = throwBuilder;
/*  Not a pure module */
